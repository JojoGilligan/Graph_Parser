lpState: goal(predict,c[ji],c[pos]) ... goal(related,c[at],c[pos])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],c[pos]) ... goal(related,c[at],c[pos])
>lpState: goal(predict,c[ji],c[pos]) ... 
>>w(at,pos)>>>lpState: goal(predict,c[ji],c[pos]) ... goal(related,c[IBM],c[pos])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],c[pos]) ... goal(related,c[IBM],c[pos])
>lpState: goal(predict,c[ji],c[pos]) ... 
>>w(IBM,pos)>>>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[at],v[-1])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[at],v[-1])
>lpState: goal(predict,c[ji],c[neg]) ... goal(related,c[at],c[neg])
>>id('toylabels.cfacts')>>>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[at],v[-1])
>lpState: goal(predict,c[ji],c[pos]) ... goal(related,c[at],c[pos])
>>id('toylabels.cfacts')>>>lpState: goal(predict,c[ji],c[neg]) ... goal(related,c[at],c[neg])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],c[neg]) ... goal(related,c[at],c[neg])
>lpState: goal(predict,c[ji],c[neg]) ... 
>>w(at,neg)>>>lpState: goal(predict,c[ji],c[neg]) ... goal(related,c[life],c[neg])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],c[neg]) ... goal(related,c[life],c[neg])
>lpState: goal(predict,c[ji],c[neg]) ... 
>>w(life,neg)>>>lpState: goal(predict,c[ji],c[pos]) ... goal(related,c[life],c[pos])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],c[pos]) ... goal(related,c[life],c[pos])
>lpState: goal(predict,c[ji],c[pos]) ... 
>>w(life,pos)>>>lpState: goal(predict,c[ji],c[pos]) ... goal(related,c[for],c[pos])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],c[pos]) ... goal(related,c[for],c[pos])
>lpState: goal(predict,c[ji],c[pos]) ... 
>>w(for,pos)>>>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[life],v[-1])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[life],v[-1])
>lpState: goal(predict,c[ji],c[neg]) ... goal(related,c[life],c[neg])
>>id('toylabels.cfacts')>>>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[life],v[-1])
>lpState: goal(predict,c[ji],c[pos]) ... goal(related,c[life],c[pos])
>>id('toylabels.cfacts')>>>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[for],v[-1])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[for],v[-1])
>lpState: goal(predict,c[ji],c[neg]) ... goal(related,c[for],c[neg])
>>id('toylabels.cfacts')>>>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[for],v[-1])
>lpState: goal(predict,c[ji],c[pos]) ... goal(related,c[for],c[pos])
>>id('toylabels.cfacts')>>>lpState: goal(predict,c[ji],c[neg]) ... goal(related,c[for],c[neg])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],c[neg]) ... goal(related,c[for],c[neg])
>lpState: goal(predict,c[ji],c[neg]) ... 
>>w(for,neg)>>>lpState: goal(predict,c[ji],c[neg]) ... goal(related,c[IBM],c[neg])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],c[neg]) ... goal(related,c[IBM],c[neg])
>lpState: goal(predict,c[ji],c[neg]) ... 
>>w(IBM,neg)>>>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[a],v[-1])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[a],v[-1])
>lpState: goal(predict,c[ji],c[neg]) ... goal(related,c[a],c[neg])
>>id('toylabels.cfacts')>>>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[a],v[-1])
>lpState: goal(predict,c[ji],c[pos]) ... goal(related,c[a],c[pos])
>>id('toylabels.cfacts')>>>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[IBM],v[-1])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[IBM],v[-1])
>lpState: goal(predict,c[ji],c[neg]) ... goal(related,c[IBM],c[neg])
>>id('toylabels.cfacts')>>>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[IBM],v[-1])
>lpState: goal(predict,c[ji],c[pos]) ... goal(related,c[IBM],c[pos])
>>id('toylabels.cfacts')>>>lpState: goal(predict,c[ji],v[-1]) ... goal(hasWord,c[ji],v[-2]) goal(isLabel,v[-1]) goal(related,v[-2],v[-1])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],v[-1]) ... goal(hasWord,c[ji],v[-2]) goal(isLabel,v[-1]) goal(related,v[-2],v[-1])
>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[for],v[-1])
>>id('toywords.graph')>>>lpState: goal(predict,c[ji],v[-1]) ... goal(hasWord,c[ji],v[-2]) goal(isLabel,v[-1]) goal(related,v[-2],v[-1])
>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[life],v[-1])
>>id('toywords.graph')>>>lpState: goal(predict,c[ji],v[-1]) ... goal(hasWord,c[ji],v[-2]) goal(isLabel,v[-1]) goal(related,v[-2],v[-1])
>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[at],v[-1])
>>id('toywords.graph')>>>lpState: goal(predict,c[ji],v[-1]) ... goal(hasWord,c[ji],v[-2]) goal(isLabel,v[-1]) goal(related,v[-2],v[-1])
>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[IBM],v[-1])
>>id('toywords.graph')>>>lpState: goal(predict,c[ji],v[-1]) ... goal(hasWord,c[ji],v[-2]) goal(isLabel,v[-1]) goal(related,v[-2],v[-1])
>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[a],v[-1])
>>id('toywords.graph')>>>lpState: goal(predict,c[ji],v[-1]) ... goal(hasWord,c[ji],v[-2]) goal(isLabel,v[-1]) goal(related,v[-2],v[-1])
>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[job],v[-1])
>>id('toywords.graph')>>>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>lpState: goal(predict,c[ji],v[-1]) ... goal(hasWord,c[ji],v[-2]) goal(isLabel,v[-1]) goal(related,v[-2],v[-1])
>>r>>>lpState: goal(predict,c[ji],c[pos]) ... goal(related,c[job],c[pos])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],c[pos]) ... goal(related,c[job],c[pos])
>lpState: goal(predict,c[ji],c[pos]) ... 
>>w(job,pos)>>>lpState: goal(predict,c[ji],c[pos]) ... 
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(trueLoopRestart)>>>lpState: goal(predict,c[ji],c[pos]) ... 
>lpState: goal(predict,c[ji],c[pos]) ... 
>>id(trueLoop)>>>lpState: goal(predict,c[ji],c[pos]) ... goal(related,c[a],c[pos])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],c[pos]) ... goal(related,c[a],c[pos])
>lpState: goal(predict,c[ji],c[pos]) ... 
>>w(a,pos)>>>lpState: goal(predict,c[ji],c[neg]) ... 
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(trueLoopRestart)>>>lpState: goal(predict,c[ji],c[neg]) ... 
>lpState: goal(predict,c[ji],c[neg]) ... 
>>id(trueLoop)>>>lpState: goal(predict,c[ji],c[neg]) ... goal(related,c[a],c[neg])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],c[neg]) ... goal(related,c[a],c[neg])
>lpState: goal(predict,c[ji],c[neg]) ... 
>>w(a,neg)>>>lpState: goal(predict,c[ji],c[neg]) ... goal(related,c[job],c[neg])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],c[neg]) ... goal(related,c[job],c[neg])
>lpState: goal(predict,c[ji],c[neg]) ... 
>>w(job,neg)>>>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[job],v[-1])
>lpState: goal(predict,c[ji],v[-2]) ... goal(predict,c[ji],v[-2])
>>id(alphaBooster)>id(defaultRestart)>>>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[job],v[-1])
>lpState: goal(predict,c[ji],c[pos]) ... goal(related,c[job],c[pos])
>>id('toylabels.cfacts')>>>lpState: goal(predict,c[ji],v[-1]) ... goal(isLabel,v[-1]) goal(related,c[job],v[-1])
>lpState: goal(predict,c[ji],c[neg]) ... goal(related,c[job],c[neg])
>>id('toylabels.cfacts')